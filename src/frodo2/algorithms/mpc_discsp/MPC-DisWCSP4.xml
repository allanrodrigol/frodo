<!-- 
FRODO: a FRamework for Open/Distributed Optimization
Copyright (C) 2008-2019  Thomas Leaute, Brammert Ottens & Radoslaw Szymanek

FRODO is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

FRODO is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Affero General Public License for more details.

You should have received a copy of the GNU Affero General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.


How to contact the authors: 
<https://frodo-ai.tech>
-->

<!-- Overall definition of the agent
	- measureTime: whether the simulated time metric should be enabled instead of just measuring wall clock time
	- measureMsgs: whether to measure the number of messages and the total amount of information sent (WARNING! This is computationally expensive)
 -->
<agentDescription className = "frodo2.algorithms.SingleQueueAgent" measureTime = "true" measureMsgs = "false" >
	
	<!-- The MailMan used when measuring time
		 - mailmanClass: the class of the mailman to be used
	-->
	<mailman mailmanClass = "frodo2.communication.mailer.CentralMailer"/>
	
	<!-- The XCSP parser
		- parserClass: the class of the parser/subsolver to be used. Currently supported:
			- frodo2.algorithms.XCSPparser: the default parser that does not consider local subproblems
			- frodo2.solutionSpaces.JaCoP.JaCoPxcspParser: a parser based on JaCoP that can be used for DCOPs with complex local subproblems
		- displayGraph: if true, displays the constraint graph in DOT format (default = false)
		- domClass: the class to be used for variable values; the supported values are: 
			- frodo2.solutionSpaces.AddableInteger 	(default) for integer-valued variables
		- utilClass: the class to be used for utility values; the supported values are: 
			- frodo2.solutionSpaces.AddableInteger 	(default) for integer utilities
		- mpc (default = false): if true, the parser behaves in "Multi-Party Computation" mode, i.e.: 
			- each agent knows the identities of all agents
			- all variables are known to all agents
		- DOTrenderer: the class to be used to display the constraint graph. Supported values:
			- empty string: displays the constraint graph in DOT format in the console; 
			- frodo2.gui.DOTrenderer: renders the constraint graph in a new window. Assumes that Graphviz' "dot" command is on the shell path. 
		- countNCCCs: whether Non-Concurrent Constraint Checks should be counted (default = false)
	 -->
	<parser parserClass = "frodo2.algorithms.XCSPparser" 
			displayGraph = "true" 
			domClass = "frodo2.solutionSpaces.AddableInteger" 
			utilClass = "frodo2.solutionSpaces.AddableInteger"
			mpc = "true" 
			DOTrenderer = ""
			countNCCCs = "false" />

	<!-- A set of modules, each being parameterized by the following attributes: 
		- className: the name of the class implementing the module
		- reportStats (only for StatsReporter modules): whether statistics should be reported to the central controller, if any (default = false)
		- messages (optional): a list of "message" elements, each parameterized by the following attributes: 
			- name: the name of the public static String field in the module that identifies the message
			- value: the type to be used for that message
			- ownerClass (optional): if present, specifies the name of a class, and the attribute "value" is then interpreted as a public static String field of that class
	 -->
	<modules>
	
		<!-- Collects and reports the solution found -->
		<module className = "frodo2.algorithms.SolutionCollector" 
				reportStats = "true" />
		
		<!-- Rescales the problem into the only form that MPC-DisWCSP4 supports: a minimization problem with non-negative costs
			- maximize [required]: whether the problem should be made a maximization problem
			- shift [optional, default = 0]: how much should be added to each cost/utility in each constraint to make them all of the desired sign
				WARNING! The resulting finite shifted costs should remain smaller than the MPC-DisWCSP4's infiniteCost parameter  
		 -->
		<module className = "frodo2.algorithms.reformulation.ProblemRescaler" 
				maximize = "false" 
				shift = "0" >
			<messages>
				<message myFieldName = "START_MSG_TYPE" 
						 targetFieldName = "START_AGENT" 
						 targetClass = "frodo2.algorithms.AgentInterface" />
			</messages>
		</module>
		
		<!-- The MPC-DisWCSP4 algorithm 
			- infiniteCost: private constraints are only allowed to be soft constraints; infeasibility is identified by a cost of infiniteCost
			- maxTotalCost: maximum total cost of any solution; should be greater than (infiniteCost * number of agents) to guarantee correctness
			- costModulo: a prime number greater than maxTotalCost, and at least equal to the number of agents + 2
			- nbrBits: the number of bits to use for Paillier encryption
		-->
		<module className = "frodo2.algorithms.mpc_discsp.MPC_DisWCSP4" 
				infiniteCost = "1000" 
				maxTotalCost = "10000" 
				costModulo = "500009" 
				nbrBits = "512" >
			<messages>
				<message myFieldName = "START_MSG_TYPE" 
						 targetFieldName = "DONE" 
						 targetClass = "frodo2.algorithms.reformulation.ProblemRescaler" />
			</messages>
		</module>
		
		<!-- Displays the messages exchanged
			- perAgent: if true, each agent reports itself the messages it exchanges 
				WARNING! This can significantly affect runtime performance. Only use this setting for debugging purposes. 
			- hideSystemMessages: whether to display system messages (default: true)
		 	- visualizer: the class of the Visualizer to be used; supported values: 
		 		- [empty string]: no visualizer; messages are not displayed
		 		- frodo2.gui.ConsoleVisualizer: messages are printed out in the console
		 		- frodo2.gui.jung.JungVisualizer: a visualizer based on JUNG2
		 -->
		<module className = "frodo2.algorithms.test.MessageDebugger" 
				perAgent = "false" 
		 		hideSystemMessages = "true" 
		 		visualizer = "" />
		 
	</modules>
</agentDescription>